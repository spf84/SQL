# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

Then I inserted the Spotify Data .csv into the table.

Next, I explored the data using the following SQL. 

--First I determined which artists have songs with higher tempos and popular songs. 
Select artist_name From Spotifydata
Where tempo > 89
And popularity > 75
Group by artist_name;

--Next, I determined how many hours the list of songs would take to play. 
Select sum(duration_ms/3.6e+6) From Spotifydata;

--Then, determined how many minutes the tracks with higher danceability and popularity would take to play. 
Select sum(duration_ms/60000) From Spotifydata
Where danceability > .7
And popularity > 85;

--Finally, after finding out the duration of the songs based on danceability and popularity I gathered the list of songs to play at the next gathering.
Select track_name From Spotifydata
Where danceability > .7
And popularity > 85;

